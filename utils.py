import sys, os, re, json
import itertools
import collections
import numpy as np
import pandas as pd
from heapq import nlargest
from jiant import *

SPAN1_LEN = 'span1_len'
SPAN1_SPAN2_LEN = 'span1_span2_len'
SPAN1_SPAN2_DIST = 'span1_span2_dist'
AT_LEAST = "at_least"
AT_MOST = "at_most"

SPLIT = 'val'
MAX_COREF_OLD_THRESHOLD_DISTANCE = 66
MAX_COREF_NEW_THRESHOLD_DISTANCE = 66
MAX_SPR_THRESHOLD_DISTANCE = 24 #changes from the original Edgeprobe_Aggregate_Analysis.py
MAX_SRL_THRESHOLD_DISTANCE = 22
MAX_NER_THRESHOLD_DISTANCE = 9
MAX_NONTERMINAL_THRESHOLD_DISTANCE = 55
MAX_DEP_THRESHOLD_DISTANCE = 30
MAX_REL_THRESHOLD_DISTANCE = 9
MAX_ALL_THRESHOLD_DISTANCE = min(MAX_COREF_OLD_THRESHOLD_DISTANCE,MAX_COREF_NEW_THRESHOLD_DISTANCE,MAX_SPR_THRESHOLD_DISTANCE, MAX_SRL_THRESHOLD_DISTANCE, MAX_NER_THRESHOLD_DISTANCE, MAX_NONTERMINAL_THRESHOLD_DISTANCE, MAX_DEP_THRESHOLD_DISTANCE, MAX_REL_THRESHOLD_DISTANCE)
BERT_LAYERS=12
MIN_EXAMPLES_CNT = 700
MIN_EXAMPLES_CNT_percent = 0.01 # less then 1% of total samples - ignore
MIN_EXAMPLES_CNT_percent_LEFTOVERS = 0.004
CASUAL_EFFECT_SPAN_SIZE = 3
NER_CASUAL_EFFECT_SPAN_SIZE = CASUAL_EFFECT_SPAN_SIZE

ID_COLS = ['run', 'task', 'split']

def softmax(x, axis=None):
    return np.exp(x - logsumexp(x, axis=axis, keepdims=True))